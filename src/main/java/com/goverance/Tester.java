package com.goverance;

import org.checkerframework.checker.units.qual.A;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.atomic.AtomicInteger;

public class Tester {

    public static void main(String[] args) throws IOException {
        Set<String> expectedEvictedKeys = new HashSet<>();
        for (int i = 1; i <= 443; i++) {
            expectedEvictedKeys.add("key" + i);
        }

        Set<String> evictionKeys = Set.of("ora1:caas::ORG1:key31", "ora1:caas::ORG9:key9", "ora1:caas::ORG6:key56", "ora1:caas::ORG4:key344", "ora1:caas::ORG10:key160", "ora1:caas::ORG8:key228", "ora1:caas::ORG8:key108", "ora1:caas::ORG3:key183", "ora1:caas::ORG10:key280", "ora1:caas::ORG8:key468", "ora1:caas::ORG7:key187", "ora1:caas::ORG8:key348", "ora1:caas::ORG4:key104", "ora1:caas::ORG4:key224", "ora1:caas::ORG1:key41", "ora1:caas::ORG6:key66", "ora1:caas::ORG4:key234", "ora1:caas::ORG4:key94", "ora1:caas::ORG4:key354", "ora1:caas::ORG4:key474", "ora1:caas::ORG3:key173", "ora1:caas::ORG8:key118", "ora1:caas::ORG10:key270", "ora1:caas::ORG10:key390", "ora1:caas::ORG3:key293", "ora1:caas::ORG7:key177", "ora1:caas::ORG8:key478", "ora1:caas::ORG8:key358", "ora1:caas::ORG8:key238", "ora1:caas::ORG7:key297", "ora1:caas::ORG4:key114", "ora1:caas::ORG1:key51", "ora1:caas::ORG6:key76", "ora1:caas::ORG4:key124", "ora1:caas::ORG4:key244", "ora1:caas::ORG10:key140", "ora1:caas::ORG4:key364", "ora1:caas::ORG4:key484", "ora1:caas::ORG10:key380", "ora1:caas::ORG10:key260", "ora1:caas::ORG8:key488", "ora1:caas::ORG8:key368", "ora1:caas::ORG8:key248", "ora1:caas::ORG8:key128", "ora1:caas::ORG1:key61", "ora1:caas::ORG6:key86", "ora1:caas::ORG5:key5", "ora1:caas::ORG10:key250", "ora1:caas::ORG4:key254", "ora1:caas::ORG2:key2", "ora1:caas::ORG10:key130", "ora1:caas::ORG4:key374", "ora1:caas::ORG4:key494", "ora1:caas::ORG10:key370", "ora1:caas::ORG3:key193", "ora1:caas::ORG8:key378", "ora1:caas::ORG8:key258", "ora1:caas::ORG7:key197", "ora1:caas::ORG8:key138", "ora1:caas::ORG1:key71", "ora1:caas::ORG6:key16", "ora1:caas::ORG4:key144", "ora1:caas::ORG4:key264", "ora1:caas::ORG4:key384", "ora1:caas::ORG8:key428", "ora1:caas::ORG9:key309", "ora1:caas::ORG8:key308", "ora1:caas::ORG7:key387", "ora1:caas::ORG1:key421", "ora1:caas::ORG8:key38", "ora1:caas::ORG4:key64", "ora1:caas::ORG7:key267", "ora1:caas::ORG7:key147", "ora1:caas::ORG1:key81", "ora1:caas::ORG6:key26", "ora1:caas::ORG4:key154", "ora1:caas::ORG4:key274", "ora1:caas::ORG4:key394", "ora1:caas::ORG8:key438", "ora1:caas::ORG8:key318", "ora1:caas::ORG9:key419", "ora1:caas::ORG1:key411", "ora1:caas::ORG10:key190", "ora1:caas::ORG8:key48", "ora1:caas::ORG7:key137", "ora1:caas::ORG4:key54", "ora1:caas::ORG7:key377", "ora1:caas::ORG7:key257", "ora1:caas::ORG1:key91", "ora1:caas::ORG9:key409", "ora1:caas::ORG6:key36", "ora1:caas::ORG4:key164", "ora1:caas::ORG4:key284", "ora1:caas::ORG8:key328", "ora1:caas::ORG8:key208", "ora1:caas::ORG10:key180", "ora1:caas::ORG8:key18", "ora1:caas::ORG7:key287", "ora1:caas::ORG7:key167", "ora1:caas::ORG4:key84", "ora1:caas::ORG2:key92", "ora1:caas::ORG8:key338", "ora1:caas::ORG8:key218", "ora1:caas::ORG4:key174", "ora1:caas::ORG10:key290", "ora1:caas::ORG4:key294", "ora1:caas::ORG10:key170", "ora1:caas::ORG7:key397", "ora1:caas::ORG8:key28", "ora1:caas::ORG7:key277", "ora1:caas::ORG8:key458", "ora1:caas::ORG7:key157", "ora1:caas::ORG4:key74", "ora1:caas::ORG2:key82", "ora1:caas::ORG10:key430", "ora1:caas::ORG10:key70", "ora1:caas::ORG10:key310", "ora1:caas::ORG3:key463", "ora1:caas::ORG5:key225", "ora1:caas::ORG5:key105", "ora1:caas::ORG3:key343", "ora1:caas::ORG10:key440", "ora1:caas::ORG9:key109", "ora1:caas::ORG2:key182", "ora1:caas::ORG9:key229", "ora1:caas::ORG3:key53", "ora1:caas::ORG9:key349", "ora1:caas::ORG9:key469", "ora1:caas::ORG8:key188", "ora1:caas::ORG5:key465", "ora1:caas::ORG3:key223", "ora1:caas::ORG3:key103", "ora1:caas::ORG5:key345", "ora1:caas::ORG2:key72", "ora1:caas::ORG10:key300", "ora1:caas::ORG10:key60", "ora1:caas::ORG10:key420", "ora1:caas::ORG5:key335", "ora1:caas::ORG5:key215", "ora1:caas::ORG3:key453", "ora1:caas::ORG9:key219", "ora1:caas::ORG2:key192", "ora1:caas::ORG9:key339", "ora1:caas::ORG3:key63", "ora1:caas::ORG4:key14", "ora1:caas::ORG9:key459", "ora1:caas::ORG8:key198", "ora1:caas::ORG3:key333", "ora1:caas::ORG3:key213", "ora1:caas::ORG5:key455", "ora1:caas::ORG10:key90", "ora1:caas::ORG10:key410", "ora1:caas::ORG5:key15", "ora1:caas::ORG2:key62", "ora1:caas::ORG3:key243", "ora1:caas::ORG5:key445", "ora1:caas::ORG3:key123", "ora1:caas::ORG5:key325", "ora1:caas::ORG5:key205", "ora1:caas::ORG3:key483", "ora1:caas::ORG3:key363", "ora1:caas::ORG9:key329", "ora1:caas::ORG9:key209", "ora1:caas::ORG2:key282", "ora1:caas::ORG4:key44", "ora1:caas::ORG3:key33", "ora1:caas::ORG4:key404", "ora1:caas::ORG5:key25", "ora1:caas::ORG10:key80", "ora1:caas::ORG10:key400", "ora1:caas::ORG2:key52", "ora1:caas::ORG3:key353", "ora1:caas::ORG3:key233", "ora1:caas::ORG5:key315", "ora1:caas::ORG3:key473", "ora1:caas::ORG2:key292", "ora1:caas::ORG9:key439", "ora1:caas::ORG2:key172", "ora1:caas::ORG9:key319", "ora1:caas::ORG3:key43", "ora1:caas::ORG4:key414", "ora1:caas::ORG3:key113", "ora1:caas::ORG2:key42", "ora1:caas::ORG10:key120", "ora1:caas::ORG3:key263", "ora1:caas::ORG10:key360", "ora1:caas::ORG5:key425", "ora1:caas::ORG3:key143", "ora1:caas::ORG10:key240", "ora1:caas::ORG5:key305", "ora1:caas::ORG3:key383", "ora1:caas::ORG10:key480", "ora1:caas::ORG9:key149", "ora1:caas::ORG8:key268", "ora1:caas::ORG8:key148", "ora1:caas::ORG4:key304", "ora1:caas::ORG3:key13", "ora1:caas::ORG4:key424", "ora1:caas::ORG8:key388", "ora1:caas::ORG2:key32", "ora1:caas::ORG10:key100", "ora1:caas::ORG3:key133", "ora1:caas::ORG10:key230", "ora1:caas::ORG10:key110", "ora1:caas::ORG3:key373", "ora1:caas::ORG10:key470", "ora1:caas::ORG10:key350", "ora1:caas::ORG3:key253", "ora1:caas::ORG5:key415", "ora1:caas::ORG9:key259", "ora1:caas::ORG8:key158", "ora1:caas::ORG9:key139", "ora1:caas::ORG3:key23", "ora1:caas::ORG4:key314", "ora1:caas::ORG8:key398", "ora1:caas::ORG8:key278", "ora1:caas::ORG2:key22", "ora1:caas::ORG1:key11", "ora1:caas::ORG10:key210", "ora1:caas::ORG10:key340", "ora1:caas::ORG10:key220", "ora1:caas::ORG10:key460", "ora1:caas::ORG5:key405", "ora1:caas::ORG3:key163", "ora1:caas::ORG9:key369", "ora1:caas::ORG9:key489", "ora1:caas::ORG9:key129", "ora1:caas::ORG9:key249", "ora1:caas::ORG4:key204", "ora1:caas::ORG4:key324", "ora1:caas::ORG8:key288", "ora1:caas::ORG8:key168", "ora1:caas::ORG4:key444", "ora1:caas::ORG2:key12", "ora1:caas::ORG1:key21", "ora1:caas::ORG10:key320", "ora1:caas::ORG10:key200", "ora1:caas::ORG10:key450", "ora1:caas::ORG4:key454", "ora1:caas::ORG10:key330", "ora1:caas::ORG3:key153", "ora1:caas::ORG3:key393", "ora1:caas::ORG5:key515", "ora1:caas::ORG9:key119", "ora1:caas::ORG3:key273", "ora1:caas::ORG9:key479", "ora1:caas::ORG9:key239", "ora1:caas::ORG9:key359", "ora1:caas::ORG8:key298", "ora1:caas::ORG8:key178", "ora1:caas::ORG4:key214", "ora1:caas::ORG4:key334", "ora1:caas::ORG6:key106", "ora1:caas::ORG1:key181", "ora1:caas::ORG2:key342", "ora1:caas::ORG5:key75", "ora1:caas::ORG5:key185", "ora1:caas::ORG3:key503", "ora1:caas::ORG2:key102", "ora1:caas::ORG9:key189", "ora1:caas::ORG7:key27", "ora1:caas::ORG2:key222", "ora1:caas::ORG6:key346", "ora1:caas::ORG6:key466", "ora1:caas::ORG7:key7", "ora1:caas::ORG6:key116", "ora1:caas::ORG2:key232", "ora1:caas::ORG2:key352", "ora1:caas::ORG5:key85", "ora1:caas::ORG5:key295", "ora1:caas::ORG5:key175", "ora1:caas::ORG7:key17", "ora1:caas::ORG9:key299", "ora1:caas::ORG2:key112", "ora1:caas::ORG6:key236", "ora1:caas::ORG9:key179", "ora1:caas::ORG6:key356", "ora1:caas::ORG1:key161", "ora1:caas::ORG6:key326", "ora1:caas::ORG6:key206", "ora1:caas::ORG10:key10", "ora1:caas::ORG5:key95", "ora1:caas::ORG7:key407", "ora1:caas::ORG5:key285", "ora1:caas::ORG3:key403", "ora1:caas::ORG2:key322", "ora1:caas::ORG9:key169", "ora1:caas::ORG2:key202", "ora1:caas::ORG9:key289", "ora1:caas::ORG1:key271", "ora1:caas::ORG6:key216", "ora1:caas::ORG6:key336", "ora1:caas::ORG1:key391", "ora1:caas::ORG2:key452", "ora1:caas::ORG1:key151", "ora1:caas::ORG9:key159", "ora1:caas::ORG5:key395", "ora1:caas::ORG3:key513", "ora1:caas::ORG5:key275", "ora1:caas::ORG5:key155", "ora1:caas::ORG2:key212", "ora1:caas::ORG2:key332", "ora1:caas::ORG9:key279", "ora1:caas::ORG6:key456", "ora1:caas::ORG9:key399", "ora1:caas::ORG10:key30", "ora1:caas::ORG10:key510", "ora1:caas::ORG2:key262", "ora1:caas::ORG6:key306", "ora1:caas::ORG5:key35", "ora1:caas::ORG6:key426", "ora1:caas::ORG3:key93", "ora1:caas::ORG2:key382", "ora1:caas::ORG3:key3", "ora1:caas::ORG7:key67", "ora1:caas::ORG5:key385", "ora1:caas::ORG5:key265", "ora1:caas::ORG3:key423", "ora1:caas::ORG5:key145", "ora1:caas::ORG3:key303", "ora1:caas::ORG10:key20", "ora1:caas::ORG4:key4", "ora1:caas::ORG2:key152", "ora1:caas::ORG5:key45", "ora1:caas::ORG6:key316", "ora1:caas::ORG2:key272", "ora1:caas::ORG2:key392", "ora1:caas::ORG7:key57", "ora1:caas::ORG5:key375", "ora1:caas::ORG5:key255", "ora1:caas::ORG3:key413", "ora1:caas::ORG5:key135", "ora1:caas::ORG10:key50", "ora1:caas::ORG9:key29", "ora1:caas::ORG2:key362", "ora1:caas::ORG5:key55", "ora1:caas::ORG2:key482", "ora1:caas::ORG2:key122", "ora1:caas::ORG2:key242", "ora1:caas::ORG6:key406", "ora1:caas::ORG3:key73", "ora1:caas::ORG7:key47", "ora1:caas::ORG3:key203", "ora1:caas::ORG5:key365", "ora1:caas::ORG5:key245", "ora1:caas::ORG3:key443", "ora1:caas::ORG3:key323", "ora1:caas::ORG5:key125", "ora1:caas::ORG10:key40", "ora1:caas::ORG9:key19", "ora1:caas::ORG5:key65", "ora1:caas::ORG5:key115", "ora1:caas::ORG2:key252", "ora1:caas::ORG2:key372", "ora1:caas::ORG2:key132", "ora1:caas::ORG1:key191", "ora1:caas::ORG3:key83", "ora1:caas::ORG7:key37", "ora1:caas::ORG3:key313", "ora1:caas::ORG9:key199", "ora1:caas::ORG5:key475", "ora1:caas::ORG5:key355", "ora1:caas::ORG3:key433", "ora1:caas::ORG5:key235", "ora1:caas::ORG9:key49", "ora1:caas::ORG7:key227", "ora1:caas::ORG7:key107", "ora1:caas::ORG1:key341", "ora1:caas::ORG1:key461", "ora1:caas::ORG4:key184", "ora1:caas::ORG1:key221", "ora1:caas::ORG7:key467", "ora1:caas::ORG7:key347", "ora1:caas::ORG8:key78", "ora1:caas::ORG9:key39", "ora1:caas::ORG7:key97", "ora1:caas::ORG7:key337", "ora1:caas::ORG7:key217", "ora1:caas::ORG4:key194", "ora1:caas::ORG6:key196", "ora1:caas::ORG2:key512", "ora1:caas::ORG1:key211", "ora1:caas::ORG8:key88", "ora1:caas::ORG9:key69", "ora1:caas::ORG7:key87", "ora1:caas::ORG8:key408", "ora1:caas::ORG1:key201", "ora1:caas::ORG1:key321", "ora1:caas::ORG6:key166", "ora1:caas::ORG6:key286", "ora1:caas::ORG1:key441", "ora1:caas::ORG8:key58", "ora1:caas::ORG7:key247", "ora1:caas::ORG7:key127", "ora1:caas::ORG7:key487", "ora1:caas::ORG7:key367", "ora1:caas::ORG9:key59", "ora1:caas::ORG7:key77", "ora1:caas::ORG8:key8", "ora1:caas::ORG8:key418", "ora1:caas::ORG6:key296", "ora1:caas::ORG1:key311", "ora1:caas::ORG6:key176", "ora1:caas::ORG7:key357", "ora1:caas::ORG8:key68", "ora1:caas::ORG7:key237", "ora1:caas::ORG7:key477", "ora1:caas::ORG9:key89", "ora1:caas::ORG6:key96", "ora1:caas::ORG1:key381", "ora1:caas::ORG7:key307", "ora1:caas::ORG1:key141", "ora1:caas::ORG1:key261", "ora1:caas::ORG6:key386", "ora1:caas::ORG6:key146", "ora1:caas::ORG6:key266", "ora1:caas::ORG2:key302", "ora1:caas::ORG2:key422", "ora1:caas::ORG9:key79", "ora1:caas::ORG1:key491", "ora1:caas::ORG7:key417", "ora1:caas::ORG1:key131", "ora1:caas::ORG1:key251", "ora1:caas::ORG1:key371", "ora1:caas::ORG6:key276", "ora1:caas::ORG6:key396", "ora1:caas::ORG2:key432", "ora1:caas::ORG6:key156", "ora1:caas::ORG2:key312", "ora1:caas::ORG8:key98", "ora1:caas::ORG6:key6", "ora1:caas::ORG7:key207", "ora1:caas::ORG7:key447", "ora1:caas::ORG7:key327", "ora1:caas::ORG1:key121", "ora1:caas::ORG1:key241", "ora1:caas::ORG1:key361", "ora1:caas::ORG1:key481", "ora1:caas::ORG2:key402", "ora1:caas::ORG6:key366", "ora1:caas::ORG6:key126", "ora1:caas::ORG6:key246", "ora1:caas::ORG9:key99", "ora1:caas::ORG7:key317", "ora1:caas::ORG1:key231", "ora1:caas::ORG1:key351", "ora1:caas::ORG1:key471", "ora1:caas::ORG5:key195", "ora1:caas::ORG1:key111", "ora1:caas::ORG6:key256", "ora1:caas::ORG6:key376", "ora1:caas::ORG2:key412", "ora1:caas::ORG6:key136");

        AtomicInteger count = new AtomicInteger(0);
        evictionKeys.forEach(k-> {
            String key = k.split(":")[4];
            if(expectedEvictedKeys.contains(key)) {
                count.incrementAndGet();
            }
        });

        System.out.println(count.get());


//        String fileName = "/Users/sperumalla/blt/tools/Darwin/redis/6.2.6/bin/test.txt";
//        String line = null;
//        int count = 0;
//
//        FileReader fileReader = new FileReader(fileName);
//
//        BufferedReader bufferedReader = new BufferedReader(fileReader);
//
//        while ((line = bufferedReader.readLine()) != null) {
//            String key = line.split(":")[4];
//            System.out.println(key);
//            if (keys.contains(key)) {
//                count++;
//            }
//        }
//
//        bufferedReader.close();
//        System.out.println(count);

    }
}
